version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  staging-executor:
    working_directory: ~/app
    docker:
      - image: cypress/included:6.1.0
    environment:
      TZ: 'Asia/Yekaterinburg'

  feature-executor:
    working_directory: ~/app
    docker:
      - image: cypress/included:6.1.0
    environment:
      TZ: 'Asia/Yekaterinburg'

  master-executor:
    working_directory: ~/app
    docker:
      - image: cypress/included:6.1.0
    environment:
      TZ: 'Asia/Yekaterinburg'

  release-executor:
    working_directory: ~/app
    docker:
      - image: circleci/node:14.15.0
    environment:
      TZ: 'Asia/Yekaterinburg'

jobs:
  deploy:
    parameters:
      domain:
        type: string
      environment:
        type: enum
        enum: ['staging', 'feature', 'master', 'release']

    executor: '<< parameters.environment >>-executor'
    steps:
      - checkout
      - add_ssh_keys
      - run: 'npm ci'
      - run: 'npm run graphql:codegen'
      - run: 'npm run build:<< parameters.environment >>'
      - run: '.circleci/deploy.sh << parameters.environment >>'
      - slack/notify:
          message: 'Выгружено на << parameters.domain >>'
          color: '#42e2f4'

  test:
    parameters:
      test_type:
        type: enum
        enum: ['e2e', 'unit']

    executor: staging-executor
    steps:
      - checkout
      - run: 'npm ci'
      - persist_to_workspace:
          root: ~/
          paths:
            - .cache/Cypress
      - run: 'npm run graphql:codegen'
      - run: 'npm run test:<< parameters.test_type >>:ci'

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

workflows:
  version: 2
  deploy:
    jobs:
      - test:
          name: test-unit
          test_type: unit
          filters:
            branches:
              ignore:
                - release

      - test:
          name: test-e2e
          test_type: e2e
          filters:
            branches:
              ignore:
                - release

      - deploy:
          name: deploy-staging
          domain: CUSTOM_NAME
          environment: staging
          filters:
            branches:
              only:
                - staging

      - deploy:
          name: deploy-master
          domain: CUSTOM_NAME
          environment: master
          filters:
            branches:
              only:
                - master

      - deploy:
          name: deploy-feature
          domain: CUSTOM_NAME
          environment: feature
          filters:
            branches:
              ignore:
                - staging
                - master
                - release

      - deploy:
          name: deploy-release
          domain: CUSTOM_NAME
          environment: release
          filters:
            branches:
              only:
                - release
